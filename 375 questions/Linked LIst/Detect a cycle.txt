class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode * slow=head;
        ListNode * fast=head;
        while(fast!=NULL and fast->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
            if(fast==slow)
                return true;
        }
        return false;
    }
};


Time Complexity : O(N)
Space Complexity : O(1)


we can also use a hashmap, but that would take o(n), space for putting values in it, as well as each node should hv a diff value
